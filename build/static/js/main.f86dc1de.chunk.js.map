{"version":3,"sources":["components/Input/input.jsx","pages/InsertPage/InsertPage.jsx","pages/TrackPage/JobCard/JobCard.jsx","pages/TrackPage/TrackPage.jsx","pages/InsertPage/auth_InsertPage/auth_InsertPage.jsx","pages/TrackPage/JobCard/JobCardv2.jsx","pages/TrackPage/auth_TrackPage/auth_TrackPage.jsx","pages/Error401Page/Error401Page.jsx","components/NavBar/navbar.jsx","App.js","reportWebVitals.js","index.js"],"names":["Input","className","onChange","onKeyPress","name","id","type","style","placeholder","value","disabled","checked","InsertPage","useState","companyName","setCompanyName","jobURL","setJobURL","checkNew","setCheckNew","checkApplied","setCheckApplied","checkPhoneCalled","setCheckPhoneCalled","checkInterviewed","setCheckInterviewed","status","setStatus","statusVerbiage","setStatusVerbiage","statusDate","setStatusDate","disable","setDisable","response","setResponse","handleChange","event","target","console","log","saveToDB","fetch","method","headers","body","JSON","stringify","levelOfImp","levelOfImpOrderNum","then","res","json","data","verbiage","message","textColor","onSubmit","preventDefault","for","JobCard","jobAppId","levelOfImportance","currentStatus","currentStatusSetDate","currentStatusVerbiage","savedNotes","levelOfImpColor","setLevelOfImpColor","setLevelOfImp","setlevelOfImpOrderNum","isLevelUpdated","SetIsLevelUpdated","newStatus","setNewStatus","newStatusVerbiage","setNewStatusVerbiage","newStatusSetDate","setNewStatusSetDate","notesOnChange","setNotesOnChange","isNotesUpdated","setIsNotesUpdated","updateJobStatus","_id","isOpen","setIsOpen","hideModal","width","href","rel","selected","slice","length","onClick","Modal","show","size","onHide","scrollable","centered","Header","Title","Body","rows","Footer","TrackPage","count","totalJobs","setTotalJobs","newJobs","setNewJobs","appliedJobs","setAppliedJobs","phoneCalledJobs","setPhoneCalledJobs","interviewedJobs","setInterviewedJobs","useEffect","loadAllJobs","foundNewJobs","foundAppliedJobs","foundPhoneCalledJobs","foundInterviewedJobs","a","foundAllJobs","sort","b","map","job","SecretEnterPage","JobCardv2","src","alt","class","SecretTrackPage","Error401Page","Navbar","RouterLinkHome","RouterLinkEnter","RouterLinkTrack","isLoggedIn","firstname","fullname","username","profileImgUrl","showModal","window","open","App","setData","success","user","linkStyle","margin","textDecoration","color","to","exact","path","location","reload","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f86dc1de.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Input({\r\n  className,\r\n  onChange,\r\n  onKeyPress,\r\n  name,\r\n  id,\r\n  type,\r\n  style,\r\n  placeholder,\r\n  value,\r\n  disabled,\r\n  checked,\r\n}) {\r\n  return (\r\n    <input\r\n      className={className}\r\n      onChange={onChange}\r\n      onKeyPress={onKeyPress}\r\n      name={name}\r\n      id={id}\r\n      type={type}\r\n      style={style}\r\n      placeholder={placeholder}\r\n      value={value}\r\n      disabled={disabled}\r\n      checked={checked} //only use for checkbox type\r\n    ></input>\r\n  );\r\n}\r\n\r\nInput.propTypes = {\r\n  onChange: PropTypes.func.isRequired,\r\n  onKeyPress: PropTypes.func,\r\n  name: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  id: PropTypes.string,\r\n  style: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  value: PropTypes.string.isRequired,\r\n  disabled: PropTypes.bool,\r\n  checked: PropTypes.bool,\r\n};\r\n\r\nexport default Input;\r\n","import React, { useState } from \"react\";\r\nimport Input from \"../../components/Input/input\";\r\n\r\nfunction InsertPage() {\r\n  const [companyName, setCompanyName] = useState(\"\");\r\n  const [jobURL, setJobURL] = useState(\"\");\r\n  const [checkNew, setCheckNew] = useState(false);\r\n  const [checkApplied, setCheckApplied] = useState(false);\r\n  const [checkPhoneCalled, setCheckPhoneCalled] = useState(false);\r\n  const [checkInterviewed, setCheckInterviewed] = useState(false);\r\n  const [status, setStatus] = useState(\"\");\r\n  const [statusVerbiage, setStatusVerbiage] = useState(\"\");\r\n  const [statusDate, setStatusDate] = useState(\"\");\r\n  const [disable, setDisable] = useState(false);\r\n  const [response, setResponse] = useState(\"\");\r\n\r\n  function handleChange(event) {\r\n    const { value, name } = event.target;\r\n\r\n    switch (name) {\r\n      case \"companyName\":\r\n        setCompanyName(value);\r\n        break;\r\n      case \"jobURL\":\r\n        setJobURL(value);\r\n        break;\r\n      case \"new\":\r\n        if (checkNew) {\r\n          setCheckNew(false);\r\n          setStatus(\"\");\r\n          setDisable(false);\r\n        } else {\r\n          setCheckNew(true);\r\n          setStatus(value);\r\n          setStatusVerbiage(\"Date to Apply\");\r\n          setDisable(true);\r\n        }\r\n        break;\r\n      case \"applied\":\r\n        if (checkApplied) {\r\n          setCheckApplied(false);\r\n          setStatus(\"\");\r\n          setDisable(false);\r\n        } else {\r\n          setCheckApplied(true);\r\n          setStatus(value);\r\n          setStatusVerbiage(\"Applied Date\");\r\n          setDisable(true);\r\n        }\r\n        break;\r\n      case \"phoneCalled\":\r\n        if (checkPhoneCalled) {\r\n          setCheckPhoneCalled(false);\r\n          setStatus(\"\");\r\n          setDisable(false);\r\n        } else {\r\n          setCheckPhoneCalled(true);\r\n          setStatus(value);\r\n          setStatusVerbiage(\"Phone Call Date\");\r\n          setDisable(true);\r\n        }\r\n        break;\r\n      case \"interviewed\":\r\n        if (checkInterviewed) {\r\n          setCheckInterviewed(false);\r\n          setStatus(\"\");\r\n          setDisable(false);\r\n        } else {\r\n          setCheckInterviewed(true);\r\n          setStatus(value);\r\n          setStatusVerbiage(\"Interview Date\");\r\n          setDisable(true);\r\n        }\r\n        break;\r\n      case \"applyDate\":\r\n      case \"appliedDate\":\r\n      case \"phoneCallDate\":\r\n      case \"interviewDate\":\r\n        setStatusDate(value);\r\n        break;\r\n      default:\r\n        console.log(\"Unidentified input field found in the insertPage form\");\r\n    }\r\n  }\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    if (companyName === \"\" || jobURL === \"\" || status === \"\") {\r\n      setResponse({\r\n        verbiage:\r\n          \"Missing field(s): please make sure all fields are filled out! Thanks!\",\r\n        textColor: \"text-danger\",\r\n      });\r\n    } else if (status) {\r\n      if (statusDate === \"\") {\r\n        setResponse({\r\n          verbiage:\r\n            \"Missing field: please make sure the Date is filled out! Thanks!\",\r\n          textColor: \"text-danger\",\r\n        });\r\n      } else {\r\n        saveToDB();\r\n      }\r\n    } else {\r\n      saveToDB();\r\n    }\r\n  }\r\n\r\n  const saveToDB = () => {\r\n    fetch(\"/create\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        companyName: companyName,\r\n        jobURL: jobURL,\r\n        status: status,\r\n        statusVerbiage: statusVerbiage,\r\n        statusDate: statusDate,\r\n        levelOfImp: \"\",\r\n        levelOfImpOrderNum: 0,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setResponse({\r\n          verbiage: data.message,\r\n          textColor: \"text-success\",\r\n        });\r\n\r\n        //clear fields\r\n        setCompanyName(\"\");\r\n        setJobURL(\"\");\r\n        setStatus(\"\");\r\n        setStatusVerbiage(\"\");\r\n        setStatusDate(\"\");\r\n        setCheckNew(false);\r\n        setCheckApplied(false);\r\n        setCheckPhoneCalled(false);\r\n        setCheckInterviewed(false);\r\n        setDisable(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        {/* Input Company Name */}\r\n        <div className=\"row mb-3 d-flex justify-content-center\">\r\n          <label className=\"col-6 col-form-label text-end\">\r\n            Company Name & Job Role\r\n          </label>\r\n          <div className=\"col-6\">\r\n            <Input\r\n              name=\"companyName\"\r\n              type=\"text\"\r\n              onChange={handleChange}\r\n              placeholder=\"Enter Name, Role\"\r\n              value={companyName}\r\n            />\r\n          </div>\r\n        </div>\r\n        {/* Input Job Post URL */}\r\n        <div className=\"row mb-3 d-flex justify-content-center\">\r\n          <label className=\"col-6 col-form-label text-end\">Job Post URL</label>\r\n          <div className=\"col-6\">\r\n            <Input\r\n              name=\"jobURL\"\r\n              type=\"url\"\r\n              onChange={handleChange}\r\n              placeholder=\"Enter URL\"\r\n              value={jobURL}\r\n            />\r\n          </div>\r\n        </div>\r\n        {/*Checkbox Status - New, Applied, Phone-Called, Interviewed */}\r\n        <div className=\"column mt-4 mb-4 d-flex justify-content-center\">\r\n          <div className=\"form-check form-check-inline\">\r\n            <Input\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              id=\"inlineCheckbox1\"\r\n              name=\"new\"\r\n              value=\"New\"\r\n              onChange={handleChange}\r\n              disabled={status === \"New\" ? null : disable}\r\n              checked={checkNew ? true : false}\r\n            />\r\n            <label className=\"form-check-label\" for=\"inlineCheckbox1\">\r\n              New\r\n            </label>\r\n          </div>\r\n          <div className=\"form-check form-check-inline\">\r\n            <Input\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              id=\"inlineCheckbox2\"\r\n              name=\"applied\"\r\n              value=\"Applied\"\r\n              onChange={handleChange}\r\n              disabled={status === \"Applied\" ? null : disable}\r\n              checked={checkApplied ? true : false}\r\n            />\r\n            <label className=\"form-check-label\" for=\"inlineCheckbox2\">\r\n              Applied\r\n            </label>\r\n          </div>\r\n          <div className=\"form-check form-check-inline\">\r\n            <Input\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              id=\"inlineCheckbox3\"\r\n              name=\"phoneCalled\"\r\n              value=\"Phone Call\"\r\n              onChange={handleChange}\r\n              disabled={status === \"Phone Call\" ? null : disable}\r\n              checked={checkPhoneCalled ? true : false}\r\n            />\r\n            <label className=\"form-check-label\" for=\"inlineCheckbox3\">\r\n              Phone-Called\r\n            </label>\r\n          </div>\r\n          <div className=\"form-check form-check-inline\">\r\n            <Input\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              id=\"inlineCheckbox4\"\r\n              name=\"interviewed\"\r\n              value=\"Interview\"\r\n              onChange={handleChange}\r\n              disabled={status === \"Interview\" ? null : disable}\r\n              checked={checkInterviewed ? true : false}\r\n            />\r\n            <label className=\"form-check-label\" for=\"inlineCheckbox4\">\r\n              Interviewed\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div className=\"d-flex justify-content-center mt-3 mb-5\">\r\n          {/* Checkbox Specific - New */}\r\n          {checkNew ? (\r\n            <div className=\"row mb-3 d-flex justify-content-center\">\r\n              <label className=\"col-sm-5 col-form-label\">\r\n                {statusVerbiage}:\r\n              </label>\r\n              <div className=\"col-sm-5\">\r\n                <Input\r\n                  name=\"applyDate\"\r\n                  type=\"date\"\r\n                  onChange={handleChange}\r\n                  placeholder=\"Enter Date\"\r\n                  value={statusDate}\r\n                />\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n          {/* Checkbox Specific - Applied */}\r\n          {checkApplied ? (\r\n            <div className=\"row mb-3 d-flex justify-content-center\">\r\n              <label className=\"col-sm-5 col-form-label\">\r\n                {statusVerbiage}:\r\n              </label>\r\n              <div className=\"col-sm-5\">\r\n                <Input\r\n                  name=\"appliedDate\"\r\n                  type=\"date\"\r\n                  onChange={handleChange}\r\n                  placeholder=\"Enter Date\"\r\n                  value={statusDate}\r\n                />\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n          {/* Checkbox Specific - Phone Called */}\r\n          {checkPhoneCalled ? (\r\n            <div className=\"row mb-3 d-flex justify-content-center\">\r\n              <label className=\"col-sm-6 col-form-label\">\r\n                {statusVerbiage}:\r\n              </label>\r\n              <div className=\"col-sm-6\">\r\n                <Input\r\n                  name=\"phoneCallDate\"\r\n                  type=\"date\"\r\n                  onChange={handleChange}\r\n                  placeholder=\"Enter Date\"\r\n                  value={statusDate}\r\n                />\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n          {/* Checkbox Specific - Interviewed */}\r\n          {checkInterviewed ? (\r\n            <div className=\"row mb-3 d-flex justify-content-center\">\r\n              <label className=\"col-sm-6 col-form-label\">\r\n                {statusVerbiage}:\r\n              </label>\r\n              <div className=\"col-sm-6\">\r\n                <Input\r\n                  name=\"interviewDate\"\r\n                  type=\"date\"\r\n                  onChange={handleChange}\r\n                  placeholder=\"Enter Date\"\r\n                  value={statusDate}\r\n                />\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n        {/* Response - if submit successfully or not */}\r\n        {response ? (\r\n          <div className=\"d-flex justify-content-center\">\r\n            <p className={response.textColor + \" fw-normal fs-6\"}>\r\n              {response.verbiage}\r\n            </p>\r\n          </div>\r\n        ) : null}\r\n        {/* Submit Button - Add Job to Database */}\r\n        <div className=\"d-flex justify-content-center mt-3 mb-5\">\r\n          <Input type=\"submit\" value=\"Add Job\" />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InsertPage;\r\n","import { React, useState } from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\n\r\nfunction JobCard({\r\n  jobAppId,\r\n  companyName,\r\n  jobURL,\r\n  levelOfImportance,\r\n  currentStatus,\r\n  currentStatusSetDate,\r\n  currentStatusVerbiage,\r\n  savedNotes,\r\n}) {\r\n  const cardWidthMargin = {\r\n    width: \"50rem\",\r\n    \"margin-left\": \"1rem\",\r\n    \"margin-right\": \"1rem\",\r\n  };\r\n\r\n  const [levelOfImpColor, setLevelOfImpColor] = useState(\"\");\r\n  const [levelOfImp, setLevelOfImp] = useState(\"\");\r\n  const [levelOfImpOrderNum, setlevelOfImpOrderNum] = useState(0);\r\n  const [isLevelUpdated, SetIsLevelUpdated] = useState(false);\r\n  const [newStatus, setNewStatus] = useState(\"\");\r\n  const [newStatusVerbiage, setNewStatusVerbiage] = useState(\"\");\r\n  const [newStatusSetDate, setNewStatusSetDate] = useState(\"\");\r\n  const [notesOnChange, setNotesOnChange] = useState(\"\");\r\n  const [isNotesUpdated, setIsNotesUpdated] = useState(false);\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    if (value === \"High\") {\r\n      setLevelOfImp(\"High\");\r\n      setlevelOfImpOrderNum(1);\r\n      setLevelOfImpColor(\"btn-danger\");\r\n      SetIsLevelUpdated(true);\r\n    } else if (value === \"Normal\") {\r\n      setLevelOfImp(\"Normal\");\r\n      setlevelOfImpOrderNum(2);\r\n      setLevelOfImpColor(\"btn-primary\");\r\n      SetIsLevelUpdated(true);\r\n    }\r\n\r\n    if (name === \"newStatus\") {\r\n      setNewStatus(value);\r\n    } else if (name === \"newStatusSetDate\") {\r\n      setNewStatusSetDate(value);\r\n    } else if (name === \"newStatusVerbiage\") {\r\n      setNewStatusVerbiage(value);\r\n    }\r\n  };\r\n\r\n  const handleNotesChange = (event) => {\r\n    const value = event.target.value;\r\n    setNotesOnChange(value);\r\n    setIsNotesUpdated(true);\r\n  };\r\n\r\n  const handleUpdateStatusClicked = (event) => {\r\n    event.preventDefault();\r\n    updateJobStatus();\r\n\r\n    //clear fields\r\n    setNewStatus(\"\");\r\n    setNewStatusSetDate(\"\");\r\n    setNewStatusVerbiage(\"\");\r\n  };\r\n\r\n  const updateJobImp = () => {\r\n    fetch(\"/updateJobImp\", {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        _id: jobAppId,\r\n        levelOfImp: levelOfImp,\r\n        levelOfImpOrderNum: levelOfImpOrderNum,\r\n      }),\r\n    }).then((res) => res.json());\r\n    // .then((data) => { //uncomment this when needed - data returned from the API endpoint\r\n    // });\r\n  };\r\n\r\n  const updateJobStatus = () => {\r\n    fetch(\"/updateJobStatus\", {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        _id: jobAppId,\r\n        status: newStatus,\r\n        statusVerbiage: newStatusVerbiage,\r\n        statusDate: newStatusSetDate,\r\n      }),\r\n    }).then((res) => res.json());\r\n    // .then((data) => { //uncomment if additional customization needed\r\n    // });\r\n  };\r\n\r\n  const handleSaveNotes = () => {\r\n    fetch(\"/saveNotes\", {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        _id: jobAppId,\r\n        savedNotes: notesOnChange,\r\n      }),\r\n    }).then((res) => res.json());\r\n    // .then((data) => { //uncomment if additional customization needed\r\n    // });\r\n  };\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const showModal = (event) => {\r\n    event.preventDefault();\r\n    setIsOpen(true);\r\n    if (savedNotes) {\r\n      setNotesOnChange(savedNotes);\r\n    }\r\n  };\r\n\r\n  const hideModal = () => {\r\n    setIsOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"d-flex justify-content-center\">\r\n      <div className=\"card border-success mb-3\" style={cardWidthMargin}>\r\n        <div className=\"card-body text-success\">\r\n          <div className=\"d-flex justify-content-between\">\r\n            <h5 className=\"card-title\">\r\n              <a href={jobURL} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                {companyName}\r\n              </a>\r\n            </h5>\r\n            <div className=\"btn-group\">\r\n              <select\r\n                className={\r\n                  \"form-select btn \" +\r\n                  (levelOfImpColor\r\n                    ? levelOfImpColor\r\n                    : levelOfImportance === \"High\"\r\n                    ? \"btn-danger\"\r\n                    : levelOfImportance === \"Normal\"\r\n                    ? \"btn-primary\"\r\n                    : levelOfImportance === \"Inactive\"\r\n                    ? \"btn-secondary\"\r\n                    : \"btn-success\")\r\n                }\r\n                aria-label=\"Default select example\"\r\n                onChange={handleChange}\r\n              >\r\n                <option selected={levelOfImportance ? false : true}>\r\n                  {levelOfImportance === \"Inactive\"\r\n                    ? \"Inactive\"\r\n                    : \"Level of Importance\"}\r\n                </option>\r\n                <option\r\n                  className=\"dropdown-item\"\r\n                  value=\"High\"\r\n                  selected={levelOfImportance === \"High\" ? true : false}\r\n                >\r\n                  High\r\n                </option>\r\n                <option\r\n                  className=\"dropdown-item\"\r\n                  value=\"Normal\"\r\n                  selected={levelOfImportance === \"Normal\" ? true : false}\r\n                >\r\n                  Normal\r\n                </option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div className=\"card-text\">\r\n            <h6>Notes:</h6>\r\n            {savedNotes ? (\r\n              <p className=\"text-black-50 fw-light font-monospace\">\r\n                {\" \"}\r\n                {savedNotes.slice(0, 140)}\r\n                {savedNotes.slice(0, 140).length === 140 ? (\r\n                  <em>...see Details</em>\r\n                ) : null}{\" \"}\r\n              </p>\r\n            ) : null}\r\n            <p>\r\n              {currentStatus}{\" \"}\r\n              <span className=\"text-black-50 fw-light font-monospace\">\r\n                - {currentStatusVerbiage}: {currentStatusSetDate}\r\n              </span>\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"card-footer bg-transparent border-success m-0 p-1\">\r\n          <div className=\"container\">\r\n            <div className=\"d-flex row justify-content-between\">\r\n              <div className=\"col-11\">\r\n                <div className=\"row g-3\">\r\n                  <div className=\"col-sm-3\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"New Status\"\r\n                      aria-label=\"New Status\"\r\n                      name=\"newStatus\"\r\n                      value={newStatus}\r\n                      onChange={handleChange}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-sm-3\">\r\n                    <select\r\n                      className=\"form-select\"\r\n                      name=\"newStatusVerbiage\"\r\n                      value={newStatusVerbiage}\r\n                      onChange={handleChange}\r\n                    >\r\n                      <option selected>...</option>\r\n                      <option className=\"dropdown-item\" value=\"Schedule on\">\r\n                        Schedule on\r\n                      </option>\r\n                      <option className=\"dropdown-item\" value=\"Submit by\">\r\n                        Submit by\r\n                      </option>\r\n                      <option className=\"dropdown-item\" value=\"applied on\">\r\n                        applied on\r\n                      </option>\r\n                      <option className=\"dropdown-item\" value=\"Completed on\">\r\n                        Completed on\r\n                      </option>\r\n                    </select>\r\n                  </div>\r\n                  <div className=\"col-sm-3\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Date\"\r\n                      aria-label=\"Date\"\r\n                      name=\"newStatusSetDate\"\r\n                      value={newStatusSetDate}\r\n                      onChange={handleChange}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-sm\">\r\n                    <button\r\n                      className=\"btn btn-outline-secondary border-0\"\r\n                      type=\"submit\"\r\n                      value=\"Update Status\"\r\n                      onClick={handleUpdateStatusClicked}\r\n                    >\r\n                      Update Status\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"col-sm\">\r\n                    <button className=\"btn\" onClick={showModal}>\r\n                      Details\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {isLevelUpdated ? updateJobImp() : null}\r\n              <Modal\r\n                show={isOpen}\r\n                size=\"xl\"\r\n                onHide={hideModal}\r\n                scrollable=\"true\"\r\n                centered\r\n              >\r\n                <Modal.Header>\r\n                  <Modal.Title>{companyName}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                  <p></p>\r\n                  <div className=\"mb-3\">\r\n                    <label for=\"noteTakingTextArea\" className=\"form-label\">\r\n                      <h3>Notes</h3>\r\n                    </label>\r\n                    <textarea\r\n                      className=\"form-control\"\r\n                      id=\"noteTakingTextArea\"\r\n                      rows=\"10\"\r\n                      value={notesOnChange}\r\n                      onChange={handleNotesChange}\r\n                    ></textarea>\r\n                  </div>\r\n                  {isNotesUpdated ? handleSaveNotes() : null}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                  <button onClick={hideModal}>Save</button>\r\n                </Modal.Footer>\r\n              </Modal>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default JobCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport JobCard from \"../../pages/TrackPage/JobCard/JobCard\";\r\n\r\nfunction TrackPage() {\r\n  const [totalJobs, setTotalJobs] = useState({\r\n    count: 0,\r\n    data: [],\r\n  });\r\n  const [newJobs, setNewJobs] = useState(0);\r\n  const [appliedJobs, setAppliedJobs] = useState(0);\r\n  const [phoneCalledJobs, setPhoneCalledJobs] = useState(0);\r\n  const [interviewedJobs, setInterviewedJobs] = useState(0);\r\n\r\n  useEffect(() => {\r\n    loadAllJobs();\r\n\r\n    fetch(\"/findAll/status/new\")\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setNewJobs(data.foundNewJobs.length);\r\n      });\r\n    fetch(\"/findAll/status/applied\")\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setAppliedJobs(data.foundAppliedJobs.length);\r\n      });\r\n    fetch(\"/findAll/status/phoneCalled\")\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setPhoneCalledJobs(data.foundPhoneCalledJobs.length);\r\n      });\r\n    fetch(\"/findAll/status/interviewed\")\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setInterviewedJobs(data.foundInterviewedJobs.length);\r\n      });\r\n  }, []);\r\n\r\n  const loadAllJobs = async () => {\r\n    const response = await fetch(\"/findAll\");\r\n    const data = await response.json();\r\n    setTotalJobs({\r\n      count: data.foundAllJobs.length,\r\n      data: data.foundAllJobs,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row d-flex justify-content-center mb-5 mt-4\">\r\n        {/* TODO: create link to each of these sections so users can access to different views */}\r\n        <div className=\"col-2 text-center\">\r\n          Total Jobs <br />\r\n          <p>{totalJobs.count ? totalJobs.count : \"0\"}</p>\r\n        </div>\r\n        <div className=\"col-2 text-center\">\r\n          New\r\n          <br />\r\n          <p>{newJobs ? newJobs : \"0\"}</p>\r\n        </div>\r\n        <div className=\"col-2 text-center\">\r\n          Applied <br />\r\n          <p>{appliedJobs ? appliedJobs : \"0\"}</p>\r\n        </div>\r\n        <div className=\"col-2 text-center\">\r\n          Phone Calls <br />\r\n          <p>{phoneCalledJobs ? phoneCalledJobs : \"0\"}</p>\r\n        </div>\r\n        <div className=\"col-2 text-center\">\r\n          Interviews <br />\r\n          <p>{interviewedJobs ? interviewedJobs : \"0\"}</p>\r\n        </div>\r\n        {/*TODO: <div className=\"col-2 text-center\">Inactive <br/><p>{inactiveJobs ? inactiveJobs : \"0\"}</p></div>    */}\r\n      </div>\r\n      <div className=\"row d-flex justify-content-center\">\r\n        {/* Sample Job Card */}\r\n        <Switch>\r\n          <Route>\r\n            <div className=\"col\">\r\n              {totalJobs.data\r\n                .sort((a, b) => {\r\n                  return a.levelOfImpOrderNum - b.levelOfImpOrderNum;\r\n                })\r\n                .map((job) => (\r\n                  <JobCard\r\n                    key={job._id}\r\n                    companyName={job.companyName}\r\n                    jobURL={job.jobURL}\r\n                    currentStatus={job.status}\r\n                    currentStatusVerbiage={job.statusVerbiage}\r\n                    currentStatusSetDate={job.statusDate}\r\n                    jobAppId={job._id}\r\n                    levelOfImportance={job.levelOfImp}\r\n                    savedNotes={job.savedNotes}\r\n                  />\r\n                ))}\r\n            </div>\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TrackPage;\r\n","import React, { useState } from \"react\";\r\nimport Input from \"../../../components/Input/input\";\r\n\r\nfunction SecretEnterPage() {\r\n  const [companyName, setCompanyName] = useState(\"\");\r\n  const [jobURL, setJobURL] = useState(\"\");\r\n  const [checkNew, setCheckNew] = useState(false);\r\n  const [checkApplied, setCheckApplied] = useState(false);\r\n  const [checkPhoneCalled, setCheckPhoneCalled] = useState(false);\r\n  const [checkInterviewed, setCheckInterviewed] = useState(false);\r\n  const [status, setStatus] = useState(\"\");\r\n  const [statusVerbiage, setStatusVerbiage] = useState(\"\");\r\n  const [statusDate, setStatusDate] = useState(\"\");\r\n  const [disable, setDisable] = useState(false);\r\n  const [response, setResponse] = useState(\"\");\r\n\r\n  function handleChange(event) {\r\n    const { value, name } = event.target;\r\n\r\n    switch (name) {\r\n      case \"companyName\":\r\n        setCompanyName(value);\r\n        break;\r\n      case \"jobURL\":\r\n        setJobURL(value);\r\n        break;\r\n      case \"new\":\r\n        if (checkNew) {\r\n          setCheckNew(false);\r\n          setStatus(\"\");\r\n          setDisable(false);\r\n        } else {\r\n          setCheckNew(true);\r\n          setStatus(value);\r\n          setStatusVerbiage(\"Date to Apply\");\r\n          setDisable(true);\r\n        }\r\n        break;\r\n      case \"applied\":\r\n        if (checkApplied) {\r\n          setCheckApplied(false);\r\n          setStatus(\"\");\r\n          setDisable(false);\r\n        } else {\r\n          setCheckApplied(true);\r\n          setStatus(value);\r\n          setStatusVerbiage(\"Applied Date\");\r\n          setDisable(true);\r\n        }\r\n        break;\r\n      case \"phoneCalled\":\r\n        if (checkPhoneCalled) {\r\n          setCheckPhoneCalled(false);\r\n          setStatus(\"\");\r\n          setDisable(false);\r\n        } else {\r\n          setCheckPhoneCalled(true);\r\n          setStatus(value);\r\n          setStatusVerbiage(\"Phone Call Date\");\r\n          setDisable(true);\r\n        }\r\n        break;\r\n      case \"interviewed\":\r\n        if (checkInterviewed) {\r\n          setCheckInterviewed(false);\r\n          setStatus(\"\");\r\n          setDisable(false);\r\n        } else {\r\n          setCheckInterviewed(true);\r\n          setStatus(value);\r\n          setStatusVerbiage(\"Interview Date\");\r\n          setDisable(true);\r\n        }\r\n        break;\r\n      case \"applyDate\":\r\n      case \"appliedDate\":\r\n      case \"phoneCallDate\":\r\n      case \"interviewDate\":\r\n        setStatusDate(value);\r\n        break;\r\n      default:\r\n        console.log(\"Unidentified input field found in the insertPage form\");\r\n    }\r\n  }\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    if (companyName === \"\" || jobURL === \"\" || status === \"\") {\r\n      setResponse({\r\n        verbiage:\r\n          \"Missing field(s): please make sure all fields are filled out! Thanks!\",\r\n        textColor: \"text-danger\",\r\n      });\r\n    } else if (status) {\r\n      if (statusDate === \"\") {\r\n        setResponse({\r\n          verbiage:\r\n            \"Missing field: please make sure the Date is filled out! Thanks!\",\r\n          textColor: \"text-danger\",\r\n        });\r\n      } else {\r\n        saveToDB();\r\n      }\r\n    } else {\r\n      saveToDB();\r\n    }\r\n  }\r\n\r\n  const saveToDB = () => {\r\n    fetch(\"/create\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        companyName: companyName,\r\n        jobURL: jobURL,\r\n        status: status,\r\n        statusVerbiage: statusVerbiage,\r\n        statusDate: statusDate,\r\n        levelOfImp: \"\",\r\n        levelOfImpOrderNum: 0,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setResponse({\r\n          verbiage: data.message,\r\n          textColor: \"text-success\",\r\n        });\r\n\r\n        //clear fields\r\n        setCompanyName(\"\");\r\n        setJobURL(\"\");\r\n        setStatus(\"\");\r\n        setStatusVerbiage(\"\");\r\n        setStatusDate(\"\");\r\n        setCheckNew(false);\r\n        setCheckApplied(false);\r\n        setCheckPhoneCalled(false);\r\n        setCheckInterviewed(false);\r\n        setDisable(false);\r\n      });\r\n  };\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"mt-5 pt-3\">\r\n        <form onSubmit={handleSubmit}>\r\n          {/* Input Company Name */}\r\n          <div className=\"row mb-3 d-flex justify-content-center\">\r\n            <label className=\"col-6 col-form-label text-end\">\r\n              Company Name\r\n            </label>\r\n            <div className=\"col-6\">\r\n              <Input\r\n                name=\"companyName\"\r\n                type=\"text\"\r\n                onChange={handleChange}\r\n                placeholder=\"Enter Name\"\r\n                value={companyName}\r\n              />\r\n            </div>\r\n          </div>\r\n          {/* Input Job Title */}\r\n          <div className=\"row mb-3 d-flex justify-content-center\">\r\n            <label className=\"col-6 col-form-label text-end\">Job Title</label>\r\n            <div className=\"col-sm-2\">\r\n              <Input\r\n                name=\"jobTitle\"\r\n                type=\"title\"\r\n                onChange={handleChange}\r\n                placeholder=\"Enter Title\"\r\n                // value = {jobTitle}\r\n              />\r\n            </div>\r\n          </div>\r\n          {/* Input Job Source */}\r\n          <div className=\"row mb-3 d-flex justify-content-center\">\r\n            <label className=\"col-6 col-form-label text-end\">Job Source</label>\r\n            <div className=\"col-6\">\r\n              <Input\r\n                name=\"jobSource\"\r\n                type=\"source\"\r\n                onChange={handleChange}\r\n                placeholder=\"Enter Source\"\r\n                // value = {jobSource}\r\n              />\r\n            </div>\r\n          </div>\r\n          {/* Input Job Type */}\r\n          <div className=\"row mb-3 d-flex justify-content-center\">\r\n            <label className=\"col-6 col-form-label text-end\">Job Type</label>\r\n            <div className=\"col-6\">\r\n              <Input\r\n                name=\"jobType\"\r\n                type=\"type\"\r\n                onChange={handleChange}\r\n                placeholder=\"Enter Type\"\r\n                // value = {jobType}\r\n              />\r\n            </div>\r\n          </div>\r\n          {/* Input Job Location */}\r\n          <div className=\"row mb-3 d-flex justify-content-center\">\r\n            <label className=\"col-6 col-form-label text-end\">\r\n              Job Location\r\n            </label>\r\n            <div className=\"col-6\">\r\n              <Input\r\n                name=\"jobLocation\"\r\n                type=\"location\"\r\n                onChange={handleChange}\r\n                placeholder=\"Enter Location\"\r\n                // value = {jobLocation}\r\n              />\r\n            </div>\r\n          </div>\r\n          {/* Input Job Post URL */}\r\n          <div className=\"row mb-3 d-flex justify-content-center\">\r\n            <label className=\"col-6 col-form-label text-end\">\r\n              Job Post URL\r\n            </label>\r\n            <div className=\"col-6\">\r\n              <Input\r\n                name=\"jobURL\"\r\n                type=\"url\"\r\n                onChange={handleChange}\r\n                placeholder=\"Enter URL\"\r\n                value={jobURL}\r\n              />\r\n            </div>\r\n          </div>\r\n          {/*Checkbox Status - New, Applied, Phone-Called, Interviewed */}\r\n          <div className=\"column mt-4 mb-4 d-flex justify-content-center\">\r\n            <div className=\"form-check form-check-inline\">\r\n              <Input\r\n                className=\"form-check-input\"\r\n                type=\"checkbox\"\r\n                id=\"inlineCheckbox1\"\r\n                name=\"new\"\r\n                value=\"New\"\r\n                onChange={handleChange}\r\n                disabled={status === \"New\" ? null : disable}\r\n                checked={checkNew ? true : false}\r\n              />\r\n              <label className=\"form-check-label\" for=\"inlineCheckbox1\">\r\n                New\r\n              </label>\r\n            </div>\r\n            <div className=\"form-check form-check-inline\">\r\n              <Input\r\n                className=\"form-check-input\"\r\n                type=\"checkbox\"\r\n                id=\"inlineCheckbox2\"\r\n                name=\"applied\"\r\n                value=\"Applied\"\r\n                onChange={handleChange}\r\n                disabled={status === \"Applied\" ? null : disable}\r\n                checked={checkApplied ? true : false}\r\n              />\r\n              <label className=\"form-check-label\" for=\"inlineCheckbox2\">\r\n                Applied\r\n              </label>\r\n            </div>\r\n            <div className=\"form-check form-check-inline\">\r\n              <Input\r\n                className=\"form-check-input\"\r\n                type=\"checkbox\"\r\n                id=\"inlineCheckbox3\"\r\n                name=\"phoneCalled\"\r\n                value=\"Phone Call\"\r\n                onChange={handleChange}\r\n                disabled={status === \"Phone Call\" ? null : disable}\r\n                checked={checkPhoneCalled ? true : false}\r\n              />\r\n              <label className=\"form-check-label\" for=\"inlineCheckbox3\">\r\n                Phone-Called\r\n              </label>\r\n            </div>\r\n            <div className=\"form-check form-check-inline\">\r\n              <Input\r\n                className=\"form-check-input\"\r\n                type=\"checkbox\"\r\n                id=\"inlineCheckbox4\"\r\n                name=\"interviewed\"\r\n                value=\"Interview\"\r\n                onChange={handleChange}\r\n                disabled={status === \"Interview\" ? null : disable}\r\n                checked={checkInterviewed ? true : false}\r\n              />\r\n              <label className=\"form-check-label\" for=\"inlineCheckbox4\">\r\n                Interviewed\r\n              </label>\r\n            </div>\r\n          </div>\r\n          <div className=\"d-flex justify-content-center mt-3 mb-5\">\r\n            {/* Checkbox Specific - New */}\r\n            {checkNew ? (\r\n              <div className=\"row mb-3 d-flex justify-content-center\">\r\n                <label className=\"col-sm-5 col-form-label\">\r\n                  {statusVerbiage}:\r\n                </label>\r\n                <div className=\"col-sm-5\">\r\n                  <Input\r\n                    name=\"applyDate\"\r\n                    type=\"date\"\r\n                    onChange={handleChange}\r\n                    placeholder=\"Enter Date\"\r\n                    value={statusDate}\r\n                  />\r\n                </div>\r\n              </div>\r\n            ) : null}\r\n            {/* Checkbox Specific - Applied */}\r\n            {checkApplied ? (\r\n              <div className=\"row mb-3 d-flex justify-content-center\">\r\n                <label className=\"col-sm-5 col-form-label\">\r\n                  {statusVerbiage}:\r\n                </label>\r\n                <div className=\"col-sm-5\">\r\n                  <Input\r\n                    name=\"appliedDate\"\r\n                    type=\"date\"\r\n                    onChange={handleChange}\r\n                    placeholder=\"Enter Date\"\r\n                    value={statusDate}\r\n                  />\r\n                </div>\r\n              </div>\r\n            ) : null}\r\n            {/* Checkbox Specific - Phone Called */}\r\n            {checkPhoneCalled ? (\r\n              <div className=\"row mb-3 d-flex justify-content-center\">\r\n                <label className=\"col-sm-6 col-form-label\">\r\n                  {statusVerbiage}:\r\n                </label>\r\n                <div className=\"col-sm-6\">\r\n                  <Input\r\n                    name=\"phoneCallDate\"\r\n                    type=\"date\"\r\n                    onChange={handleChange}\r\n                    placeholder=\"Enter Date\"\r\n                    value={statusDate}\r\n                  />\r\n                </div>\r\n              </div>\r\n            ) : null}\r\n            {/* Checkbox Specific - Interviewed */}\r\n            {checkInterviewed ? (\r\n              <div className=\"row mb-3 d-flex justify-content-center\">\r\n                <label className=\"col-sm-6 col-form-label\">\r\n                  {statusVerbiage}:\r\n                </label>\r\n                <div className=\"col-sm-6\">\r\n                  <Input\r\n                    name=\"interviewDate\"\r\n                    type=\"date\"\r\n                    onChange={handleChange}\r\n                    placeholder=\"Enter Date\"\r\n                    value={statusDate}\r\n                  />\r\n                </div>\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n          {/* Response - if submit successfully or not */}\r\n          {response ? (\r\n            <div className=\"d-flex justify-content-center\">\r\n              <p className={response.textColor + \" fw-normal fs-6\"}>\r\n                {response.verbiage}\r\n              </p>\r\n            </div>\r\n          ) : null}\r\n          {/* Submit Button - Add Job to Database */}\r\n          <div className=\"d-flex justify-content-center mt-3 mb-5\">\r\n            <Input type=\"submit\" value=\"Add Job\" />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SecretEnterPage;\r\n","import { React } from \"react\";\r\n\r\nfunction JobCardv2() {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row row-cols-1 row-cols-md-3 g-4\">\r\n        <div className=\"col\">\r\n          <div className=\"card h-100\">\r\n            <img src=\"...\" className=\"card-img-top\" alt=\"...\" />\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title\">Card title</h5>\r\n              <p className=\"card-text\">\r\n                This is a longer card with supporting text below as a natural\r\n                lead-in to additional content. This content is a little bit\r\n                longer.\r\n              </p>\r\n            </div>\r\n            <div class=\"card-footer\">\r\n              <small class=\"text-muted\">Last updated 3 mins ago</small>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col\">\r\n          <div className=\"card h-100\">\r\n            <img src=\"...\" className=\"card-img-top\" alt=\"...\" />\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title\">Card title</h5>\r\n              <p className=\"card-text\">This is a short card.</p>\r\n            </div>\r\n            <div class=\"card-footer\">\r\n              <small class=\"text-muted\">Last updated 3 mins ago</small>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col\">\r\n          <div className=\"card h-100\">\r\n            <img src=\"...\" className=\"card-img-top\" alt=\"...\" />\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title\">Card title</h5>\r\n              <p className=\"card-text\">\r\n                This is a longer card with supporting text below as a natural\r\n                lead-in to additional content.\r\n              </p>\r\n            </div>\r\n            <div class=\"card-footer\">\r\n              <small class=\"text-muted\">Last updated 3 mins ago</small>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col\">\r\n          <div className=\"card h-100\">\r\n            <img src=\"...\" className=\"card-img-top\" alt=\"...\" />\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title\">Card title</h5>\r\n              <p className=\"card-text\">\r\n                This is a longer card with supporting text below as a natural\r\n                lead-in to additional content. This content is a little bit\r\n                longer.\r\n              </p>\r\n            </div>\r\n            <div class=\"card-footer\">\r\n              <small class=\"text-muted\">Last updated 3 mins ago</small>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default JobCardv2;\r\n","import React from \"react\";\r\nimport JobCardv2 from \"../JobCard/JobCardv2\";\r\n\r\nfunction SecretTrackPage() {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"mt-5 pt-3\">\r\n        <strong>UNDER DEVELOPMENT [TESTING ONLY]</strong>\r\n        <br />\r\n        YOU ARE LOG IN NOW! CLICK ON SIGN ON AND YOU SHOULD SEE A LOGOUT BUTTON\r\n        TO LOG OUT!\r\n        <br />\r\n        <br />\r\n        <JobCardv2 />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SecretTrackPage;\r\n","import React from \"react\";\r\n\r\nfunction Error401Page() {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"mt-5 pt-3\">\r\n        <strong>Error 401 MISSING PERMISSION UNAUTHORIZED ACCESS</strong>\r\n        <br />\r\n        AUTHORIZATION REQUIRED: USER AUTHENTICATION IS REQUIRED!\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Error401Page;\r\n","import { React, useState } from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\n\r\nfunction Navbar({\r\n  RouterLinkHome,\r\n  RouterLinkEnter,\r\n  RouterLinkTrack,\r\n  isLoggedIn,\r\n  firstname,\r\n  fullname,\r\n  username,\r\n  profileImgUrl,\r\n}) {\r\n  const googleBackgroundStyle = {\r\n    \"background-color\": \"#dd4b39\",\r\n  };\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const showModal = (event) => {\r\n    event.preventDefault();\r\n    setIsOpen(true);\r\n  };\r\n\r\n  const hideModal = () => {\r\n    setIsOpen(false);\r\n  };\r\n\r\n  const handleSignInGoogle = () => {\r\n    window.open(\"https://jxt-app-v1.herokuapp.com/auth/google\", \"_self\"); //Live\r\n    // window.open(\"http://localhost:3001/auth/google\", \"_self\"); //(Local)\r\n  };\r\n\r\n  const handleLogOutGoogle = () => {\r\n    window.open(\"https://jxt-app-v1.herokuapp.com/auth/logout\", \"_self\"); //Live\r\n    // window.open(\"http://localhost:3001/auth/logout\", \"_self\"); //(Local)\r\n  };\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark fixed-top\">\r\n      <div className=\"container-fluid p-0\">\r\n        <span className=\"navbar-brand p-2 mx-2\">{RouterLinkHome}</span>\r\n        <button\r\n          className=\"navbar-toggler mx-5\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div\r\n          className=\"collapse navbar-collapse mx-4 text-light\"\r\n          id=\"navbarSupportedContent\"\r\n        >\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <span\r\n                className=\"nav-link active text-light mx-2\"\r\n                aria-current=\"page\"\r\n                name=\"enter-jobs\"\r\n                id=\"enter-jobs\"\r\n              >\r\n                {RouterLinkEnter}\r\n              </span>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <span\r\n                className=\"nav-link text-light mx-2\"\r\n                name=\"enter-jobs\"\r\n                id=\"enter-jobs\"\r\n              >\r\n                {RouterLinkTrack}\r\n              </span>\r\n            </li>\r\n          </ul>\r\n          <form className=\"d-flex\">\r\n            {isLoggedIn ? (\r\n              <button\r\n                className=\"btn btn-outline-success mx-4\"\r\n                onClick={showModal}\r\n              >\r\n                {firstname}\r\n              </button>\r\n            ) : (\r\n              <button\r\n                className=\"btn btn-outline-success mx-4\"\r\n                type=\"submit\"\r\n                onClick={showModal}\r\n              >\r\n                Sign in\r\n              </button>\r\n            )}\r\n            <Modal\r\n              show={isOpen}\r\n              size=\"xl\"\r\n              onHide={hideModal}\r\n              scrollable=\"true\"\r\n              centered\r\n            >\r\n              <Modal.Header>\r\n                <Modal.Title>\r\n                  {isLoggedIn ? \"Account Profile\" : \"Sign in\"}\r\n                </Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Body>\r\n                {/* Use this icon link https://ionic.io/ionicons to insert the Google logo Icon next to the sign in text */}\r\n                <div className=\"card social-block\">\r\n                  <div className=\"card-body d-flex flex-row justify-content-center\">\r\n                    {isLoggedIn ? (\r\n                      <>\r\n                        <div>\r\n                          <img src={profileImgUrl} alt=\"profile\"></img>\r\n                          <h3>{fullname}</h3>\r\n                          <p>{username}</p>\r\n                        </div>\r\n                      </>\r\n                    ) : (\r\n                      <button\r\n                        onClick={handleSignInGoogle}\r\n                        className=\"btn btn-block btn-social btn-google\"\r\n                        style={googleBackgroundStyle}\r\n                      >\r\n                        <span className=\"fa fa-google\"></span> Sign in with\r\n                        google\r\n                      </button>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </Modal.Body>\r\n              <Modal.Footer>\r\n                {isLoggedIn ? (\r\n                  <>\r\n                    <button onClick={handleLogOutGoogle}>Sign Out</button>\r\n                    <button onClick={hideModal}>close</button>\r\n                  </>\r\n                ) : (\r\n                  <button onClick={hideModal}>close</button>\r\n                )}\r\n              </Modal.Footer>\r\n            </Modal>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport InsertPage from \"./pages/InsertPage/InsertPage\";\r\nimport TrackPage from \"./pages/TrackPage/TrackPage\";\r\nimport SecretEnterPage from \"./pages/InsertPage/auth_InsertPage/auth_InsertPage\";\r\nimport SecretTrackPage from \"./pages/TrackPage/auth_TrackPage/auth_TrackPage\";\r\nimport Error401Page from \"./pages/Error401Page/Error401Page\";\r\nimport Navbar from \"./components/NavBar/navbar\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  const [data, setData] = useState({\r\n    isLoggedIn: false,\r\n    fullname: \"\",\r\n    firstname: \"\",\r\n    username: \"\",\r\n    profileImgUrl: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetch(\"/secret\")\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setData({\r\n          isLoggedIn: data.success,\r\n          fullname: data.user.fullname,\r\n          firstname: data.user.firstname,\r\n          username: data.user.username,\r\n          profileImgUrl: data.user.profileImgUrl,\r\n        });\r\n        console.log(data);\r\n      });\r\n  }, []);\r\n\r\n  const linkStyle = {\r\n    margin: \"0rem\",\r\n    textDecoration: \"none\",\r\n    color: \"white\",\r\n  };\r\n\r\n  const reloadPage = () => {\r\n    window.location.reload();\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <header className=\"row m-5\">\r\n        <Router>\r\n          <div>\r\n            <Navbar\r\n              RouterLinkHome={\r\n                <Link to=\"/\" style={linkStyle}>\r\n                  JXT Job Tracker\r\n                </Link>\r\n              }\r\n              RouterLinkEnter={\r\n                <Link to=\"/enter-page\" style={linkStyle}>\r\n                  Enter\r\n                </Link>\r\n              }\r\n              RouterLinkTrack={\r\n                !data.isLoggedIn ? (\r\n                  <Link to=\"/track-page\" style={linkStyle}>\r\n                    Track\r\n                  </Link>\r\n                ) : (\r\n                  <Link to=\"/secret-page\" style={linkStyle}>\r\n                    MyTrack\r\n                  </Link>\r\n                )\r\n              }\r\n              isLoggedIn={data.isLoggedIn}\r\n              fullname={data.fullname}\r\n              firstname={data.firstname}\r\n              username={data.username}\r\n              profileImgUrl={data.profileImgUrl}\r\n            />\r\n            <Switch>\r\n              <body className=\"row d-flex justify-content-center align-items-center mt-5\">\r\n                <Route exact path=\"/\">\r\n                  <TrackPage />\r\n                </Route>\r\n                <Route path=\"/enter-page\">\r\n                  {!data.isLoggedIn ? <InsertPage /> : <SecretEnterPage />}\r\n                </Route>\r\n                <Route path=\"/track-page\" onClick={reloadPage}>\r\n                  <TrackPage />\r\n                </Route>\r\n                <Route path=\"/secret-page\">\r\n                  {!data.isLoggedIn ? <Error401Page /> : <SecretTrackPage />}\r\n                </Route>\r\n              </body>\r\n            </Switch>\r\n          </div>\r\n        </Router>\r\n      </header>\r\n      <footer className=\"fixed-bottom\">\r\n        <p className=\"cpText text-center mt-5\">\r\n          {!data.isLoggedIn ? null : \"User Authenticated!\"}\r\n        </p>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}